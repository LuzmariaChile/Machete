@model Machete.Domain.Activity
@using Machete.Web.Helpers
@using Machete.Web.Resources
@using Machete.Domain
@{
    System.Globalization.CultureInfo CI = (System.Globalization.CultureInfo)Session["Culture"];
    string recType = "activity";
}
@using (Html.BeginForm("Edit", "Activity", FormMethod.Post, 
                        new { @class = "edittab-form EditPost", @id="ActivityTab-" + Model.ID }))
{
    @*<input type="button" value="@Activities.viewlink" class="formButton" id="viewActivity-@Model.ID" />*@
    <input type="submit" value="@Activities.editsubmit" class="formButton saveBtn"/>
    if (Html.IsInRole(Html.Role_AM()))
    {
        <input id="deleteActivityButton-@Model.ID" type="button" value="@Activities.deletesubmit" 
                class="formButton deleteButton" />
    }
    <br />    
    @Html.ValidationSummary(true)
    @Html.EditorForModel()

}
@if (Html.IsInRole(Html.Role_AM()))
{
    //
    // Only Managers can delete activity records
    // The phonedesk can edit and save
    //
    using (Html.BeginForm("Delete", "Activity", FormMethod.Post, 
                            new { @class = "edittab-form DeletePost", @id = "DeleteActivity-" + Model.ID }))
    {
        @Html.HiddenFor(model => model.ID);
    }
}
@Html.Partial("ActivitySigninIndex", new ActivitySignin() { activityID = Model.ID})
<script type="text/javascript">
    $(document).ready(function () {
        $('#viewActivity-@Model.ID').click(function () {
            printwindow = window.open('/Activity/View/@Model.ID');
        });
        $('.formButton').button();
        $('#activityName').focus();
        //
        // machete UI detect changes on forms in tabs   
        $("#ActivityTab-@(Model.ID)").mUI('formDetectChanges', {
            recType: "@(recType)",
            formLevel: 1,
            changeConfirm: "@(Machete.Web.Resources.Shared.changeConfirm)",
            changeTitle: "@(Machete.Web.Resources.Shared.changeTitle)"
        });
        //
        // validation for elements added after page load
        $.validator.unobtrusive.parseDynamicContent($('#ActivityTab-@Model.ID'));
        //
        // delete button confirmation
        $("#deleteActivityButton-@Model.ID").mUI('formClickDelete', {
            ok: "@(Activities.deletesubmit)",
            confirm: '@(Activities.deleteconfirmation)',
            title: '@(Activities.deletetitle)',
            form: $('#DeleteActivity-@Model.ID')
        });
        //
        // edit form submit
        $('#ActivityTab-@Model.ID').mUI('formSubmit', {
            create: false,
            selectTab: 0,
            formLevel: 1
        });
    });
</script>