@model Machete.Domain.WorkOrder
@using Machete.Domain.Resources
@using Machete.Web.Resources
@using Machete.Web.Helpers
@using System.Globalization

@{
    CultureInfo CI = (CultureInfo)Session["Culture"];
}
<body>
    <div class="page">
        <div id="main">
            <div class="dateNeeded">
                <div class="neededText">@WorkOrders.dateneeded</div>
                <div class="neededText">@System.String.Format("{0:dddd}", Model.dateTimeofWork)</div>
                <div class="neededText">@System.String.Format("{0:d}", Model.dateTimeofWork)</div>
                <div class="neededText">@System.String.Format("{0:t}", Model.dateTimeofWork)</div>
                @if (Model.timeFlexible == true)
                {
                    <div class="neededText">@WorkOrders.flexible</div>
                }
                else
                {
                    <div class="neededText">@WorkOrders.sharp</div>
                }
            </div>

            <br />
            @if (Model.paperOrderNum.HasValue)
            {
                <h2>@WorkOrders.boxlegend# @Model.paperOrderNum</h2>
            }
            else
            {
                <h2>@WorkOrders.boxlegend# @Model.ID</h2>
            }
            <h3>@Employers.boxlegend: @Model.Employer.name</h3>
            @Html.DisplayForModel()
            <div class="tb-label">
                @Html.LabelFor(model => model.workerRequests)
            </div>
            <div class="tb-field">
                @foreach (var req in Model.workerRequests)
                {
                    @System.String.Format(req.workerRequested.dwccardnum + "--" + req.fullName) <br />
                }
            </div>
            <h4>@WorkOrders.listOfPositions</h4>
            <table>
                <thead>
                    <tr>
                        <td>@WorkOrders.woidcount</td>
                        <td>@WorkAssignment.skillID</td>
                        <td>@WorkAssignment.hourlyWage</td>
                        <td>@WorkAssignments.hours</td>
                        <td>@WorkAssignments.hourRange</td>
                        <td>@WorkAssignment.days</td>
                        <td>@WorkAssignment.surcharge</td>
                        <td>@WorkAssignments.earnings</td>
                        <td>@WorkAssignments.earningsRange</td>
                        <td>@WorkAssignment.englishLevelID</td>
                    </tr>
                </thead>
                @foreach (var item in Model.workAssignments)
                {
                    <tr>
                        <td class="tb-field-fixed">@item.pseudoID</td>
                        <td class="tb-field-fixed">@Lookups.byID(item.skillID)</td>
                        <td class="tb-field-fixed">@System.String.Format("{0:C}", item.hourlyWage)</td>
                        <td class="tb-field-fixed">@Html.DisplayFor(modelItem => item.hours)</td>
                        @if (item.hourRange > 0)
                        {
                            <td class="tb-field-fixed">@Html.DisplayFor(modelItem => item.hourRange)</td>
                        }
                        else
                        {
                            <td></td>
                        }
                        <td class="tb-field-fixed">@Html.DisplayFor(modelItem => item.days)</td>
                        <td class="tb-field-fixed">@System.String.Format("{0:C}", item.surcharge)</td>
                        <td class="tb-field-fixed">@System.String.Format("{0:C}", item.getMinEarnings)</td>
                        @if (item.hourRange > 0)
                        {
                            <td class="tb-field-fixed">@System.String.Format("{0:C}", item.getMaxEarnings)</td>
                        }
                        else
                        {
                            <td></td>
                        }
                        <td class="tb-field-fixed">@item.englishLevelID</td>
                    </tr>
                    if (item.workerAssigned != null || item.description != null)
                    { 
                    <tr>
                        <td colspan="10">
                            <div class="tb-table">
                                @if (item.workerAssigned != null)
                                {
                                    <div class="tb-row">
                                        <div class="tb-label">
                                            <h3>@Machete.Web.Resources.WorkOrders.workername</h3>
                                        </div>
                                        <div class="tb-field">
                                            <h3>@Html.Encode(item.workerAssigned.Person.fullName())</h3>
                                        </div>
                                    </div>
                                }
                        @if (item.description != null)
                        {
                                <div class="tb-row">
                                        <div class="tb-label">
                                            @WorkAssignment.description
                            </div>
                                        <div class="tb-field">
                                            @Html.DisplayFor(modelItem => item.description)
                        </div>
                                    </div>
                        }
                    </div>
                        </td>
                    </tr>
                    }
                }
            </table>
        </div>
        <!--main-->
    </div>
    <!--page-->
</body>
<style>
body {
    background-color: #414D5B;
    font-size: 75%;
    font-family: Verdana, Tahoma, Arial, "Helvetica Neue", Helvetica, Sans-Serif;
    margin: 0;
    padding: 0;
    color: #607286;
}
a:link {
    color: #034af3;
    text-decoration: underline;
}

a:visited {
    color: #505abc;
}

a:hover {
    color: #1d60ff;
    text-decoration: none;
}

a:active {
    color: #12eb87;
}
p, ul {
    margin-bottom: 20px;
    line-height: 1.6em;
}
h1, h2, h3, h4, h5, h6 {
    font-size: 1.5em;
    color: #000;
}

h1 {
    font-size: 2em;
    padding-bottom: 0;
    margin-bottom: 0;
}

h2 {
    padding: 0 0 10px 0;
}

h3 {
    font-size: 1.2em;
}

h4 {
    font-size: 1.1em;
}

h5, h6 {
    font-size: 1em;
}
fieldset {
    border: 1px solid #ddd;
    padding: 0 1.4em 1.4em 1.4em;
    margin: 0 0 1.5em 0;
}

legend {
    font-size: 1.2em;
    font-weight: bold;
}

textarea {
    min-height: 75px;
}
table {
    border: solid 1px #e8eef4;
    border-collapse: collapse;
}

    table td {
        padding: 5px;
        border: solid 1px #e8eef4;
    }







.page {
    width: 97%;
    margin-left: auto;
    margin-right: auto;
}
.tb-table {
    display: table;
}

.tb-row {
    display: table-row;
}

.tb-cell {
    display: table-cell;
}

.tb-label {
    /*border: 1px solid red;*/
    width: 13em;
    margin: 0em 0 0 0;
    font-weight: bold;
    font-size: 90%;
    padding: 1px;
    text-align: right;
    display: table-cell;
}
.tb-field {
    /*border: 1px solid blue;*/
    margin: 0.5em 0 0 0;
    padding: 1px;
    display: table-cell;
    /*font-weight: bold;*/
    /*width: 20em;*/
}
.tb-field-fixed {
    /*border: 1px solid blue;*/
    margin: 0.5em 0 0 0;
    padding: 5px;
    /*font-weight: bold;*/
    width: 80px;
    text-align: center;
    display: table-cell;
}
.tb-bordered_field {
    border: 1px solid black;
    margin: 1em 0 0 0;
    padding: 5px;
    text-align: left;
    display: table-cell;
}
.dateNeeded {
    float: right;
    border: 1px solid Black;
}

/* WorkOrder/View: Box floating in upper right */
.neededText {
    font-size: 1.5em;
    color: #000;
    margin: 2px;
}





#main {
    padding: 20px 10px 10px 10px;
    background-color: #fff;
    margin-bottom: 30px;
    _height: 1px; /* only IE6 applies CSS properties starting with an underscore */
}


</style>