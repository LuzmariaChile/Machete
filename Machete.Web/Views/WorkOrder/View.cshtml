@model Machete.Domain.WorkOrder
@using Machete.Domain.Resources           
@using Machete.Web.Resources
@using Machete.Web.Helpers
@using System.Globalization
<link href="@Url.Content("~/Content/print.css")" rel="stylesheet" type="text/css" media="print" />
@{
    ViewBag.Title = WorkOrders.viewtitle;
    CultureInfo CI = (CultureInfo)Session["Culture"];
}
<div class="dateNeeded">
    <div class="neededText">@WorkOrders.dateneeded</div>
    <div class="neededText">@System.String.Format("{0:dddd}", Model.dateTimeofWork)</div>
    <div class="neededText">@System.String.Format("{0:d}", Model.dateTimeofWork)</div>
    <div class="neededText">@System.String.Format("{0:t}", Model.dateTimeofWork)</div>
    @if (Model.timeFlexible == true)
    {
        <div class="neededText">@WorkOrders.flexible</div>
    }
    else
    {
        <div class="neededText">@WorkOrders.sharp</div>
    }
</div>

<br />
@if (Model.paperOrderNum.HasValue)
{
<h2>@WorkOrders.boxlegend# @Model.paperOrderNum</h2>
}
else
{
    <h2>@WorkOrders.boxlegend# @Model.ID</h2>
}
<h3>@Employers.boxlegend: @Model.Employer.name</h3> 
<div class="recordButtons print_off">
    <input type="button" id="printOrder" class="formButton" value="@WorkOrders.printWorkOrder"/>
    <input type="button" id="printMap" class="formButton" value="@Shared.printGoogleMap"/>
</div>
@Html.DisplayForModel()
<div class="tb-label">
    @Html.LabelFor(model => model.workerRequests)
</div>
<div class="tb-field">
    @foreach (var req in Model.workerRequests)
    {
        @System.String.Format(req.workerRequested.dwccardnum + "--" + req.fullName) <br />
    }    
</div>
<h4>@WorkOrders.listOfPositions</h4>
<div class="tb-table">
    <div class="tb-row">
        <div class="tb-header-fixed">@WorkOrders.woidcount</div>
        <div class="tb-header-fixed">@WorkAssignment.skillID</div>
        <div class="tb-header-fixed">@WorkAssignment.hourlyWage</div>
        <div class="tb-header-fixed">@WorkAssignments.hours</div> 
        <div class="tb-header-fixed">@WorkAssignments.hourRange</div>                       
        <div class="tb-header-fixed">@WorkAssignment.days</div>
        <div class="tb-header-fixed">@WorkAssignments.earnings</div>
        <div class="tb-header-fixed">@WorkAssignments.earningsRange</div>
        <div class="tb-header-fixed">@WorkAssignment.englishLevelID</div>          
    </div>
</div>
@foreach (var item in Model.workAssignments)
{
    <div class="tb-table">
        <div class="tb-row">
            <div class="tb-field-fixed">@item.pseudoID</div>           
            <div class="tb-field-fixed">@Lookups.byID(item.skillID, CI.TwoLetterISOLanguageName)</div> 
            <div class="tb-field-fixed">@System.String.Format("{0:C}", item.hourlyWage)</div>
            <div class="tb-field-fixed">@Html.DisplayFor(modelItem => item.hours)</div>
            @if (item.hourRange > 0)
            {
            <div class="tb-field-fixed">@Html.DisplayFor(modelItem => item.hourRange)</div>
            }
            else
            {
                <div class="tb-field-fixed"></div>
            }
            <div class="tb-field-fixed">@Html.DisplayFor(modelItem => item.days)</div>
            <div class="tb-field-fixed">@System.String.Format("{0:C}", item.hourlyWage * item.hours * item.days)</div>
            @if (item.hourRange > 0)
            {
            <div class="tb-field-fixed">@System.String.Format("{0:C}", item.hourlyWage * item.hourRange * item.days)</div>
            }
            else
            {
                <div class="tb-field-fixed"></div>
            }            
            <div class="tb-field-fixed">@item.englishLevelID</div>
                       
            
        </div>
    </div>
    
            if (item.description != null)
            {
        <div class="tb-table">
            <div class="tb-row">
                <div class="tb-underline">
                    @WorkAssignment.description
                </div>
                <div class="tb-field">
                    @Html.DisplayFor(modelItem => item.description)
                </div>
            </div>
        </div>
            }
    <div class="tb-table">
        <div class="tb-row">
            <div class="tb-label">
                <h3>@Machete.Web.Resources.WorkOrders.workername</h3>
            </div>
            <div class="tb-field">
                @if (item.workerAssigned != null)
                {
                  <h3>@Html.Encode(item.workerAssigned.Person.fullName())</h3>
                }
                else
                {
                    @Html.Encode("_____________________________________________")
                }
            </div>
        </div>
    </div>
    <br />
}
<br />
<div class="tb-table">
    <div class="tb-row">
        <div class="tb-label">
        @Html.LabelFor(model => model.Createdby)
        </div>
        <div class="tb-field">
        @Html.DisplayFor(model => model.Createdby)
        </div>
                <div class="tb-label">
        @Html.LabelFor(model => model.datecreated)
        </div>
        <div class="tb-field">
        @Html.DisplayFor(model => model.datecreated)
        </div>
        <div class="tb-label">
        @Html.LabelFor(model => model.Updatedby)
        </div>
        <div class="tb-field">
        @Html.DisplayFor(model => model.Updatedby)
        </div>
                <div class="tb-label">
        @Html.LabelFor(model => model.dateupdated)
        </div>
        <div class="tb-field">
        @Html.DisplayFor(model => model.dateupdated)
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('.formButton').button();
        $('#printMap').click(function () { openGoogleMap("@Html.Encode(Model.workSiteAddress1 + ' ' + Model.city + ' ' + Model.state)", null) });
        $('#printOrder').click(function () {
            window.print();
        });
    });

</script>