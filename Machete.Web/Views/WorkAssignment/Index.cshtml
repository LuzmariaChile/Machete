@model Machete.Web.ViewModel.WorkAssignmentIndex
@using Machete.Web.Helpers
@using Machete.Web.Resources
@using Machete.Domain.Resources
@{
    System.Globalization.CultureInfo CI = (System.Globalization.CultureInfo)Session["Culture"];
}
@using (Html.BeginForm())
{
<div style="display:block;">
    @Html.LabelFor(m => m.wa_grouping)
    @Html.TextBoxFor(m => m.wa_grouping)
    @Html.LabelFor(m => m.typeofwork_grouping)
    @Html.TextBoxFor(m => m.typeofwork_grouping)
    @Html.LabelFor(m => m.assignedWorker_visible)
    @Html.TextBoxFor(m => m.assignedWorker_visible)
    @Html.LabelFor(m => m.signin_visible)
    @Html.TextBoxFor(m => m.signin_visible)
</div>   
<div style="float: left;">     
    <div>
        @Html.LabelFor(m => m.todaysdate)
    </div>
    <div>
        @Html.TextBoxFor(m => m.todaysdate, new { @class = "ui-datepicker", @style = "width: 5em;" })
        <input type="button" value="update" id="updateBtn" style="display:none;"/>
    </div>    
    <div>
        @Html.LabelFor(m => m.dwccardnum)
    </div>
    <div>
        @Html.TextBoxFor(m => m.dwccardnum, new { @style = "width: 5em;" })
    </div>
</div>
}        
<div id="buttonDivider">
        <div id="radioWorkers" class="radio">
		    <input type="radio" id="rW1_lottery" name="radio" checked="checked" /><label for="rW1_lottery">Lottery<br />list</label>
		    <input type="radio" id="rW1_signin" name="radio"  /><label for="rW1_signin">Sign-in<br />list</label>
	    </div>
        <div class="radio">
            <input type="button" id="bAssign" class="formButton dispatchButton" value="Assign" />
            <input type="button" id="bUnassign" class="formButton dispatchButton" value="Unassign"/>

        </div>
    @*<div id="radioOpenFilled" class="radio" style="float: left;padding: 0 3em 0 0;">*@
    <div id="radioOpenFilled" class="radio">
        <input type="radio" id="rA1_requested" name="radioOpenFilled" /><label for="rA1_requested" class="dispatchButton">Requested<br/>(Active)</label>
		<input type="radio" id="rA1_skilled" name="radioOpenFilled" /><label for="rA1_skilled" class="dispatchButton">Skilled<br />(Active)</label>
        <input type="radio" id="rA1_active" name="radioOpenFilled" /><label for="rA1_active" class="dispatchButton">Open<br />(Active)</label>
		<input type="radio" id="rA1_completed" name="radioOpenFilled" /><label for="rA1_completed" class="dispatchButton">Assigned<br />(Active)</label>
        <input type="radio" id="rA1_all" name="radioOpenFilled" checked="checked" /><label for="rA1_all" class="dispatchButton">All</label>
	</div>
    <div id="radioProgram" class="radio">
	    <input type="radio" id="rA2_DWC" name="radioProgram" checked="checked" /><label for="rA2_DWC">DWC</label>
	    <input type="radio" id="rA2_HHH" name="radioProgram"  /><label for="rA2_HHH">HHH</label>
        <input type="radio" id="rA2_All" name="radioProgram"  /><label for="rA2_All">All</label>
    </div>
</div>

<div class="tb-table" style="clear: left;">
<div class="tb-row"></div>
<div id="signinTab" class="tb-cell">
    <ul>
        <li><a href="#signinList">Workers</a></li>
    </ul>
    <div id="signinList">
    <table id="signinTable" class="display">
    <thead>
        <tr>
            <th>dwc#</th>
            <th>full name?!</th>
        </tr>
    </thead>
    </table>
    </div>
</div>

<div id="assignmentTab" class="tb-cell">
    <ul>
        <li><a href="#availAssignList">Assignments?!</a></li>
    </ul>
        <div id="availAssignList">


@*        <div id="radioDate" class="radio" style="float: left;float: left;padding: 0 3em 0 0;">
		    <input type="radio" id="rA3_today" name="radioDate" checked="checked" /><label for="rA3_today">Today</label>
		    <input type="radio" id="rA3_picker" name="radioDate" class="ui-datepicker"/><label for="rA3_picker">Select date</label>
            <input type="radio" id="rA3_range" name="radioDate" /><label for="rA3_range">Date range</label>
	    </div>*@
            <table id="availAssignTable" class="display">
            <thead>
                <tr>
                    <th>assignedWorker</th>
                    <th>ID#</th>
                    <th>@WorkOrder.dateTimeofWork</th>
                    <th>@WorkAssignment.englishLevelID</th>
                    <th>@WorkAssignment.skillID</th>
                    <th>@WorkAssignment.hourlyWage</th>
                    <th>@WorkAssignment.hours</th>
                    <th>@WorkAssignment.days</th>
                    <th>@WorkAssignments.earnings</th>
                    <th>@WorkAssignment.description</th>
                </tr>
            </thead>
        </table>
    </div>
</div>
</div>
</div>
<script language="javascript" type="text/javascript">
    $(document).ready(function () {
    DatePicker();
    $( ".radio" ).buttonset();
    $(".formButton").button();
    $('#signin_visible').val(true);
    $('#assignedWorker_visible').val(false);
    jqrfyTabs($("#assignmentTab"), "ui-tabs-assignment-");
    jqrfyTabs($("#signinTab"), "ui-tabs-signin-");
        
    jqrfyWSignin($("#signinTable"), {
        "bPaginate": true,
        "bLengthChange": true,
        "bServerSide": true,
        "sAjaxSource": "/WorkerSignin/AjaxHandler",
        "oLanguage": datatable_lang_@(CI.TwoLetterISOLanguageName),
        "bProcessing": true,
        "aoColumns": [
            {"mDataProp": "dwccardnum"},
            {"mDataProp": "fullname"}
        ],
        "fnServerData": function ( sSource, aoData, fnCallback ) {
			/* Add some extra data to the sender */
			aoData.push( { "name": "todaysdate", "value": $('#todaysdate').val() } );
            aoData.push( { "name": "dwccardnum", "value": $('#dwccardnum').val()} );
            aoData.push( { "name": "wa_grouping", "value": $('#wa_grouping').val()} );
            aoData.push( { "name": "typeofwork_grouping", "value": $('#typeofwork_grouping').val()} );            
			$.getJSON( sSource, aoData, function (json) { 
				/* Do whatever additional processing you want on the callback, then tell DataTables */
				fnCallback(json)
			} );
		},
        "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
            $(nRow).attr('requestedID', aData['WSIID']);
            //alert(aData['WID'] + "-" + aData['WSIID']);
            if (aData['WAID'] > 0) { // green
                $(nRow).addClass('statusGreen');
            }                
            return nRow;
        } 
    });
    jqrfyTable($("#availAssignTable"), $("#assignmentTab"),
    {
        "bPaginate": true,
        "bLengthChange": true,
        "aaSorting": [[4, 'desc']],
        "bFilter": true,
        //"bSort": true,
        "bInfo": true,
        "bAutoWidth": false,
        "bServerSide": true,
        "sAjaxSource": "/WorkAssignment/AjaxHandler",
        "oLanguage": datatable_lang_@(CI.TwoLetterISOLanguageName),
        "bProcessing": true,
        "aoColumns": [
                        { "mDataProp": "assignedWorker", "bVisible": false, "bSortable": false}, 
                        { "mDataProp": "pWAID"},                            
                        { "mDataProp": "dateTimeofWork"},                            
                        { "mDataProp": "englishlevel"}, 
                        { "mDataProp": "skill"}, 
                        { "mDataProp": "hourlywage"}, 
                        { "mDataProp": "hours"}, 
                        { "mDataProp": "days"},
                        { "mDataProp": "earnings"},
                        { "mDataProp": "description"}
                    ],
        "aoSearchCols" : [null, null, null, null, null, null, null, null, null, null],
        "fnServerData": function ( sSource, aoData, fnCallback ) {
			    /* Add some extra data to the sender */
			    aoData.push( { "name": "todaysdate", "value": $('#todaysdate').val() } );
                aoData.push( { "name": "dwccardnum", "value": $('#dwccardnum').val()} );
                aoData.push( { "name": "wa_grouping", "value": $('#wa_grouping').val()} );
                aoData.push( { "name": "typeofwork_grouping", "value": $('#typeofwork_grouping').val()} );
                aoData.push( { "name": "status", "value": @Lookups.getSingleEN("orderstatus", "Active")});
			    $.getJSON( sSource, aoData, function (json) { 
				    /* Do whatever additional processing you want on the callback, then tell DataTables */
				    fnCallback(json)
			    } );
		    },
        "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
            $(nRow).attr('requestedID', aData['WAID']);
            //alert(aData['WID'] + "-" + aData['WSIID']);
            if (aData['WID'] > 0 && aData['WSIID'] > 0) { // green
                $(nRow).addClass('statusGreen');
            } 
            if (aData['WID'] > 0 && aData['WSIID'] == 0) { // red
                $(nRow).addClass('statusYellow');
            }   
            //$(nRow).attr('edittablabel', aData[1]);                
            return nRow;
        } 
        });
        //
        //
        //
        $('#bAssign').click(function (e) {
            e.preventDefault();                
            var assignRow = $('#availAssignTable').find('tbody').find('tr.row_selected').attr('requestedID');
            var signinRow = $('#signinTable').find('tbody').find('tr.row_selected').attr('requestedID');
            //alert("WSI-ID: " + signinRow + " WA-ID: " + assignRow);
            $.post("/WorkAssignment/Assign", 
                {
                    waid: assignRow,
                    wsiid: signinRow
                },
                function (data) {
                    if (data.result == false) {
                        alert(data.resultMsg);
                    } else {
                        $("#updateBtn").click();     
                    }
                }
            );
        });
                    //
        //
        //
        $('#bUnassign').click(function (e) {
            e.preventDefault();                
            var assignRow = $('#availAssignTable').find('tbody').find('tr.row_selected').attr('requestedID');
            var signinRow = $('#signinTable').find('tbody').find('tr.row_selected').attr('requestedID');
            //alert("WSI-ID: " + signinRow + " WA-ID: " + assignRow);
            $.post("/WorkAssignment/Unassign", {
                    waid: assignRow,
                    wsiid: signinRow
            },
            function (data) {
                if (data.result == false) {
                    alert(data.resultMsg);
                } else {
                    $("#updateBtn").click();     
                }
            });
        });
        $('#rA1_all').click(function (e) {
            e.preventDefault();  
            $('#wa_grouping').val('all'); 
            $('#signin_visible').val(true);
            $('#assignedWorker_visible').val(true);
            $("#updateBtn").click();    
        });
        $('#rA1_requested').click(function (e) {
            e.preventDefault();
            $('#wa_grouping').val('requested'); 
            $('#signin_visible').val(true);
            $('#assignedWorker_visible').val(false);
            $("#updateBtn").click();     
        });
        $('#rA1_active').click(function (e) {
            e.preventDefault(); 
            $('#wa_grouping').val('open'); 
            $('#signin_visible').val(true);
            $('#assignedWorker_visible').val(false);
            $("#updateBtn").click(); 
        });
        $('#rA1_skilled').click(function (e) {
            e.preventDefault();  
            $('#wa_grouping').val('skilled'); 
            $('#signin_visible').val(true);
            $('#assignedWorker_visible').val(false);
            $("#updateBtn").click();    
          
        });
        $('#rA1_completed').click(function (e) {
            e.preventDefault();
            $('#wa_grouping').val('filled');
            $('#signin_visible').val(false);
            $('#assignedWorker_visible').val(true);
            $("#updateBtn").click();                 
        });
          
        $("#updateBtn").click(function (e) {
            e.preventDefault();
            if ($('#assignedWorker_visible').val() == 'true') {
                $("#availAssignTable").dataTable().fnSetColumnVis( 0, true );
            } else {
                $("#availAssignTable").dataTable().fnSetColumnVis( 0, false );
            }
            if ($('#signin_visible').val() == 'true') {
                $("#signinTab").show();
            } else {
                $("#signinTab").hide();
            }
            //alert($("#signinTable").dataTable().fnFilter());
            if ($('#signinTable_filter').val() == null) {
                $("#signinTable").dataTable().fnDraw();
            } else {
                $("#signinTable").dataTable().fnFilter("");
            }
            if ($('#availAssignTable_filter').val() == null) {
                $("#availAssignTable").dataTable().fnDraw();
            } else {
                $("#availAssignTable").dataTable().fnFilter("");
            }
            
        });
    });
    function DatePicker() {
        $('.ui-datepicker').datepicker({
            dateFormat: 'mm/dd/yy'//,
//            buttonImage: '@Url.Content("~/Content/calendar.gif")',
//            buttonImageOnly: true,
//            showOn: "button"
        });
         $('.ui-datepicker').change(function (event) {
            $("#updateBtn").click();
         });
    }
</script>