@model Machete.Domain.WorkAssignment
@using Machete.Web.Helpers           
@using Machete.Web.Resources
@{
    string recType = "assignment";
    int editDisable = 0;
    if (!Html.IsInRole(Html.Role_AM()) && (Html.IsInRole(Html.Role_AMP()) && Model.workOrder.dateTimeofWork < DateTime.Today))
    {
        editDisable = 1;
    }
}
@using (Html.BeginForm("Edit", "WorkAssignment", FormMethod.Post,
                        new { @class = "edittab-form EditPost", @id = "WorkAssignmentTab-" + Model.ID }))
{
    @*<input type="button" value="@WorkAssignments.viewlink" class="formButton" id="view-@(Model.ID)" />*@
    if ((Html.IsInRole(Html.Role_AMP()) && Model.workOrder.dateTimeofWork >= DateTime.Today) || Html.IsInRole(Html.Role_AM()))
    {
    <input type="submit" value="@WorkAssignments.editsubmit" class="formButton"/>
    <input type="button" value="@WorkAssignments.dupsubmit" class="formButton" id="duplicate-@(Model.ID)" />
    }

    if ((Html.IsInRole(Html.Role_AMP()) &&
        Model.workOrder.dateTimeofWork >= DateTime.Today) ||
    Html.IsInRole(Html.Role_AM())
    )
    {
        <input id="deleteWorkAssignmentButton-@(Model.ID)" type="button" value="@WorkAssignments.deletesubmit" 
                class="formButton deleteButton" />
    }
    <br />  
    @Html.ValidationSummary(true)
    @Html.EditorFor(model => model)

}

@using (Html.BeginForm("Duplicate", "WorkAssignment", FormMethod.Post,
                        new { @class = "edittab-form DuplicatePost", @id = "DuplicateWorkAssignment-" + Model.ID }))
{
    @Html.HiddenFor(model => model.ID);
}

@if ((Html.IsInRole(Html.Role_AMP()) &&
        Model.workOrder.dateTimeofWork >= DateTime.Today) ||
    Html.IsInRole(Html.Role_AM())
    )
{
    using (Html.BeginForm("Delete", "WorkAssignment", FormMethod.Post,
                            new { @class = "edittab-form DeletePost", @id = "DeleteWorkAssignment-" + Model.ID }))
    {
        @Html.HiddenFor(model => model.ID);
    }
}
<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        //
        // Block phonedesk from editing old orders
        //
        if (@(editDisable)) { 
            $('#WorkAssignmentTab-@(Model.ID)').find('input,select,textarea').attr('disabled', 'disabled');
        }
        $('#activateWorkOrderButton-@(Model.workOrderID)').hide();
        $('#viewWorkAssignment-@(Model.ID)').click(function () {
            printwindow = window.open('/WorkAssignment/View/@(Model.ID)');
        });
        $('.formButton').button();
        $('#contactName').focus();
        $.validator.unobtrusive.parseDynamicContent('#WorkAssignmentTab-@(Model.ID)');
        //
        // wage calculations
        $('#WorkAssignmentTab-@(Model.ID)').mUI('waFormConfiguration');
        //
        // Delete confirmation 
        $("#deleteWorkAssignmentButton-@(Model.ID)").mUI('formClickDelete', {
            ok: "@WorkAssignments.deletesubmit",
            confirm: '@WorkAssignments.deleteconfirmation',
            title: '@WorkAssignments.deletetitle',
            form: $('#DeleteWorkAssignment-@Model.ID')
        });
        //
        //  Edit submit event
        $("#WorkAssignmentTab-@(Model.ID)").mUI('formSubmit', {
            exclusiveTab: false
        });
        //
        // Duplicate submit event
        $("#duplicate-@(Model.ID)").mUI('formClickDuplicate', {
            editForm: $('#WorkAssignmentTab-@(Model.ID)'),
            dupForm: $('#DuplicateWorkAssignment-@(Model.ID)')
        });
        //
        // duplicate form submit
        $("#DuplicateWorkAssignment-@(Model.ID)").mUI('formSubmit', {
            exclusiveTab: false,
            create: true,
            recType: "@(recType)"
        });
    });
</script>