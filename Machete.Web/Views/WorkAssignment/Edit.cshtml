@model Machete.Domain.WorkAssignment
@using Machete.Web.Helpers           
@using Machete.Web.Resources
@{
    string recType = "assignment";
    int editDisable = 0;
    if (!Html.IsInRole(Html.Role_AM()) && (Html.IsInRole(Html.Role_AMP()) && Model.workOrder.dateTimeofWork < DateTime.Today))
    {
        editDisable = 1;
    }
}
@using (Html.BeginForm("Edit", "WorkAssignment", FormMethod.Post,
                        new { @class = "edittab-form EditPost", @id = "WorkAssignmentTab-" + Model.ID }))
{
    @*<input type="button" value="@WorkAssignments.viewlink" class="formButton" id="view-@(Model.ID)" />*@
    if ((Html.IsInRole(Html.Role_AMP()) && Model.workOrder.dateTimeofWork >= DateTime.Today) || Html.IsInRole(Html.Role_AM()))
    {
    <input type="submit" value="@WorkAssignments.editsubmit" class="formButton"/>
    <input type="button" value="@WorkAssignments.dupsubmit" class="formButton" id="duplicate-@(Model.ID)" />
    }

    if ((Html.IsInRole(Html.Role_AMP()) &&
        Model.workOrder.dateTimeofWork >= DateTime.Today) ||
    Html.IsInRole(Html.Role_AM())
    )
    {
        <input id="deleteWorkAssignmentButton-@(Model.ID)" type="button" value="@WorkAssignments.deletesubmit" 
                class="formButton deleteButton" />
    }
    <br />  
    @Html.ValidationSummary(true)
    @Html.EditorFor(model => model)

}

@using (Html.BeginForm("Duplicate", "WorkAssignment", FormMethod.Post,
                        new { @class = "edittab-form DuplicatePost", @id = "DuplicateWorkAssignment-" + Model.ID }))
{
    @Html.HiddenFor(model => model.ID);
}

@if ((Html.IsInRole(Html.Role_AMP()) &&
        Model.workOrder.dateTimeofWork >= DateTime.Today) ||
    Html.IsInRole(Html.Role_AM())
    )
{
    using (Html.BeginForm("Delete", "WorkAssignment", FormMethod.Post,
                            new { @class = "edittab-form DeletePost", @id = "DeleteWorkAssignment-" + Model.ID }))
    {
        @Html.HiddenFor(model => model.ID);
    }
}
<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        //
        // Block phonedesk from editing old orders
        //
        if (@(editDisable)) { 
            $('#WorkAssignmentTab-@(Model.ID)').find('input,select,textarea').attr('disabled', 'disabled');
        }
        dupSubmit_@(Model.ID) = null;
        dupSubmit_@(Model.ID) = false;
        $('#activateWorkOrderButton-@(Model.workOrderID)').hide();
        $('#viewWorkAssignment-@(Model.ID)').click(function () {
            printwindow = window.open('/WorkAssignment/View/@(Model.ID)');
        });
        $('.formButton').button();
        $('#contactName').focus();
        //var myWorkAssignmentTab_@(Model.ID) = $('#WorkAssignmentTab-@(Model.ID)');
        $.validator.unobtrusive.parseDynamicContent('#WorkAssignmentTab-@(Model.ID)');
        //
        // Find tabindex attribute (for tab order, not jquery tabs) and increment by 10
        //
        $('#WorkAssignmentTab-@(Model.ID)').find('[tabindex]').each(function () { 
            $(this).attr('tabindex', parseInt($(this).attr('tabindex')) + 10);
         });
        //
        // wage calculations
        //
        $('#WorkAssignmentTab-@(Model.ID)').mUI('waFormConfiguration');
//        if ($('#hourlyWage').text() == "0") {
//            parseSkillsDD('#WorkAssignmentTab-@(Model.ID)');
//        }
//        $('#WorkAssignmentTab-@(Model.ID)').find('#skillID').bind('change', function () { 
//            parseSkillsDD('#WorkAssignmentTab-@(Model.ID)'); 
//        });


        ////////////////////////////////////////////////////////////////
        //
        // Delete confirmation 
        //
        $("#deleteWorkAssignmentButton-@(Model.ID)").click(function () {
            $.alerts.okButton = "@WorkAssignments.deletesubmit";
            jConfirm('@WorkAssignments.deleteconfirmation',
                     '@WorkAssignments.deletetitle',
                     function (r) {
                         if (r == true) {
                             $('#DeleteWorkAssignment-@(Model.ID)').submit();
                         }
                     }
            );
        });
        ////////////////////////////////////////////////////////////////
        //
        //  Edit submit event
        //
        $('#WorkAssignmentTab-@(Model.ID)').submit(function (e) {
            e.preventDefault();
            if ($('#WorkAssignmentTab-@(Model.ID)').valid()) {
                $.post($(this).attr("action"), $(this).serialize());
            } else {
                return;
            }
            // dupSubmit is a global bit; flipped when save is triggered by duplicate button
            if (!dupSubmit_@(Model.ID)) {
                $(e.target).closest('.ui-tabs').tabs("select", 0);
                dupSubmit_@(Model.ID) = false;
            }
            //TODO: javascript...need to deal with ajax error
            
        });
        ////////////////////////////////////////////////////////////////
        //
        // Delete submit event
        //
        $("#DeleteWorkAssignment-@(Model.ID)").submit(function (e) {
            $.post($(this).attr("action"), $(this).serialize());
            var oTabs = $(e.target).closest('.ui-tabs');
            $(oTabs).find('.ui-state-active').find('span.ui-icon-close').click();
            //TODO: javascript...need to deal with ajax error
            e.preventDefault();
        });
        ////////////////////////////////////////////////////////////////
        //
        // Duplicate submit event
        //
        $("#duplicate-@(Model.ID)").click(function (e) { 
            dupSubmit_@(Model.ID) = true;
            $('#WorkAssignmentTab-@(Model.ID)').submit();
            $('#DuplicateWorkAssignment-@(Model.ID)').submit(); 
        });
        $("#DuplicateWorkAssignment-@(Model.ID)").submit(function (e) {
            if ($('#WorkAssignmentTab-@(Model.ID)').valid()) {
                $.post($(this).attr("action"), $(this).serialize(),
                        function (data) {                        
                            add_rectab(data.sNewRef, data.sNewLabel, M_assignmentTabs_@(Model.workOrderID), false, data.iNewID, "@(recType)");
                        }
                );
            }
            //TODO: javascript...need to deal with ajax error
            e.preventDefault();
        });
    });
</script>