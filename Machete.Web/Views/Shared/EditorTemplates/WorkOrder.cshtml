@model Machete.Domain.WorkOrder
@using Machete.Web.Helpers
@using Machete.Web.Resources
@using Machete.Domain.Resources
@{
    System.Globalization.CultureInfo CI = (System.Globalization.CultureInfo)Session["Culture"];
    string recType = "WO";
    string idPrefix = recType + Model.ID + "-";
}
@Html.HiddenFor(model => model.ID, new { @class = "hiddenRecID" })
@Html.HiddenFor(model => model.EmployerID, new { @id = idPrefix + "EmployerID" })
<div class="tb-table">
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.dateTimeofWork)
        </div>
        <div class="tb-field">
            @Html.TextBox("dateTimeofWork", Html.Encode(System.String.Format("{0:g}", Model.dateTimeofWork)), new { @id = idPrefix + "dateTimeofWork" })
            @Html.ValidationMessageFor(model => model.dateTimeofWork)
        </div>
        <div class="tb-label">
            @Html.LabelFor(model => model.paperOrderNum)
        </div>
        <div class="tb-field">
            @Html.TextBox("paperOrderNum", Model.paperOrderNum, new { style = "width: 5em", id = idPrefix + "paperOrderNum" })
            @Html.ValidationMessageFor(model => model.paperOrderNum)
        </div>
    </div>
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.status)
        </div>
        

        @if (Html.IsInRole(Html.Role_AM()))
        {
            <div class="tb-field">
            @Html.DropDownListFor(model => model.status,
                                         new SelectList(Lookups.orderstatus(CI.TwoLetterISOLanguageName), "Value", "Text", Model.status), 
                                    @Machete.Web.Resources.Shared.choose, 
                                    new { @id = idPrefix + "status" })
            @Html.ValidationMessageFor(model => model.status)
            </div>
                
        }
        else
        {
            <div class="tb-header">

            @Lookups.byID(Model.status, CI.TwoLetterISOLanguageName)
            @Html.HiddenFor(model => model.status, new { @id = idPrefix + "status" })
            </div>
        }
        <div class="tb-label" style="width: auto">
            @Html.LabelFor(model => model.timeFlexible)
        </div>
        <div class="tb-field" style="width: 20px">
            @Html.DropDownListFor(model => model.timeFlexible, 
                                    new SelectList(Lookups.yesno(CI.TwoLetterISOLanguageName), "Value", "Text", Model.timeFlexible), 
                                    @Machete.Web.Resources.Shared.choose, 
                                    new { tabindex = "2", id = idPrefix + "timeFlexible" })           
            @Html.ValidationMessageFor(model => model.timeFlexible)
        </div>
    </div>
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.contactName)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.contactName, new { tabindex = "1", id = idPrefix + "contactName" })
            @Html.ValidationMessageFor(model => model.contactName)
        </div>
        <div class="tb-label">
            @Html.LabelFor(model => model.permanentPlacement)
        </div>
        <div class="tb-field">
            @Html.DropDownListFor(model => model.permanentPlacement,
                                    new SelectList(Lookups.yesno(CI.TwoLetterISOLanguageName), "Value", "Text", Model.permanentPlacement),
                                    @Machete.Web.Resources.Shared.choose,
                                    new { tabindex = "2", id = idPrefix + "permanentPlacement" })
            @Html.ValidationMessageFor(model => model.permanentPlacement)
        </div>
    </div>
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.workSiteAddress1)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.workSiteAddress1, new { tabindex = "1", id = idPrefix + "workSiteAddress1" })
            @Html.ValidationMessageFor(model => model.workSiteAddress1)
        </div>
         @*<div class="tb-label">
            @Html.LabelFor(model => model.typeOfWorkID)
        </div>
        <div class="tb-field">
            @Html.DropDownListFor(model => model.typeOfWorkID, new SelectList(Lookups.typeOfWork(CI.TwoLetterISOLanguageName), "Value", "Text", Model.typeOfWorkID), @Machete.Web.Resources.Shared.choose, new { tabindex = "2" })
            @Html.ValidationMessageFor(model => model.typeOfWorkID)
        </div>*@
    </div>
    <!--tb-row-->
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.workSiteAddress2)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.workSiteAddress2, new { tabindex = "1", id = idPrefix + "workSiteAddress2" })
            @Html.ValidationMessageFor(model => model.workSiteAddress2)
        </div>
        <div class="tb-label englishRequired_@(Model.ID)">
            @Html.LabelFor(model => model.englishRequired)
        </div>
        <div class="tb-field englishRequired_@(Model.ID)">
            @Html.DropDownListFor(model => model.englishRequired, 
            new SelectList(Lookups.yesno(CI.TwoLetterISOLanguageName), "Value", "Text", Model.englishRequired), 
            @Machete.Web.Resources.Shared.choose,
                              new { tabindex = "2", id = idPrefix + "englishRequired" })
            @Html.ValidationMessageFor(model => model.englishRequired)
        </div>
    </div>
    <!--tb-row-->
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.city)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.city, new { tabindex = "1", id = idPrefix + "city" })
            @Html.ValidationMessageFor(model => model.city)
        </div>
        <div class="tb-label">
            @Html.LabelFor(model => model.lunchSupplied)
        </div>
        <div class="tb-field">
            @Html.DropDownListFor(model => model.lunchSupplied, 
            new SelectList(Lookups.yesno(CI.TwoLetterISOLanguageName), "Value", "Text", Model.lunchSupplied), 
            @Machete.Web.Resources.Shared.choose,
                              new { tabindex = "2", id = idPrefix + "lunchSupplied" })
            @Html.ValidationMessageFor(model => model.lunchSupplied)
        </div>

    </div>
    <!--tb-row-->
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.state)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.state, new { tabindex = "1", id = idPrefix + "state" })
            @Html.ValidationMessageFor(model => model.state)
        </div>
        <div class="tb-label">
            @Html.LabelFor(model => model.transportMethodID)
        </div>
        <div class="tb-field">
            @Html.DropDownListFor(model => model.transportMethodID,
                     new SelectList(Lookups.transportmethod(CI.TwoLetterISOLanguageName), "Value", "Text", Model.transportMethodID), 
            @Machete.Web.Resources.Shared.choose,
                              new { tabindex = "2", id = idPrefix + "transportMethodID" })
            @Html.ValidationMessageFor(model => model.transportMethodID)
        </div>
    </div>
    <!--tb-row-->
    <div class="tb-row">

    <div class="tb-label">
            @Html.LabelFor(model => model.zipcode)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.zipcode, new { tabindex = "1", id = idPrefix + "zipcode" })
            @Html.ValidationMessageFor(model => model.zipcode)
        </div>
        <div class="tb-label">
            @Html.LabelFor(model => model.transportFee)
        </div>
        <div class="tb-field">      
            @Html.TextBox("transportFee", 
            Html.Encode(System.String.Format("{0:f2}", Model.transportFee)),
                     new { tabindex = "2", @class = "money-field", id = idPrefix + "transportFee" })
            @Html.ValidationMessageFor(model => model.transportFee)
        </div>
    </div>
    <!--tb-row-->
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.phone)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.phone, new { tabindex = "1", id = idPrefix + "phone" })
            @Html.ValidationMessageFor(model => model.phone)
        </div>
        <div class="tb-label">
            @Html.LabelFor(model => model.transportFeeExtra)
        </div>
        <div class="tb-field">
            @Html.TextBox("transportFeeExtra", 
            Html.Encode(System.String.Format("{0:f2}", Model.transportFeeExtra)),
                              new { tabindex = "2", @class = "money-field", id = idPrefix + "transportFeeExtra" })
            @Html.ValidationMessageFor(model => model.transportFeeExtra)
        </div>
    </div>
</div><!--tb-table main workorder table-->
<div class="tb-table">
    <div class="tb-row englishNoteRow" id="@(idPrefix)englishRequiredNoteRow">
        <div class="tb-label desc-label">
            @Html.LabelFor(model => model.englishRequiredNote)
        </div>
        <div class="tb-field">
            @Html.TextAreaFor(model => model.englishRequiredNote, 
                new { tabindex = "2", @class = "desc-field", id = idPrefix + "englishRequiredNote" })
            @Html.ValidationMessageFor(model => model.englishRequiredNote)
        </div>
    </div>
    <div class="tb-row">
        <div class="tb-label desc-label">
            @Html.LabelFor(model => model.workerRequests)
            <input type="button" value="@Machete.Domain.Resources.WorkOrder.requestAdd" class="formButton" id="addRequestBtn-@(Model.ID)"/>
            <input type="button" value="@Machete.Domain.Resources.WorkOrder.requestRemove" class="formButton" id="removeRequestBtn-@(Model.ID)"/>
        </div>
        <div class="tb-field desc-field">
            @Html.ListBox("workerRequests2", new SelectList(ViewBag.workerRequests, "Value", "Text"), new { @id = "workerRequests2_WO-"+ Model.ID, tabindex = "2", @style="min-width: 8em;"})
        </div>

        <div class="tb-label desc-label">
            @Html.LabelFor(model => model.description)
        </div>
        <div class="tb-field desc-field">
            @Html.TextAreaFor(model => model.description, new { tabindex = "3", @class = "desc-field", id = idPrefix + "description" })
            @Html.ValidationMessageFor(model => model.description)
        </div>
    </div>
</div>
@Html.Partial("ManagerInfo")
@Html.Partial("AdministratorInfo")

<div id="workerDialog-@(Model.ID)" title="@Machete.Domain.Resources.WorkOrder.requestTitle">
    <table id="workerTable-@(Model.ID)" class="display" style="display: none">
        <thead>
            <tr>
                <th>EDITREF</th>
                <th>LABEL</th>
                <th>ID</th>
                <th>@Worker.dwccardnum</th>
                <th>@Worker.active</th>
                <th>@Person.firstname1</th>
                <th>@Person.firstname2</th>
                <th>@Person.lastname1</th>
                <th>@Person.lastname2</th>
                <th>@Worker.memberexpirationdate</th>
            </tr>
        </thead>
    </table>
</div>
<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        //
        //
        $("@(idPrefix)dateTimeofWork").datetimepicker({
            stepMinute: 15,
            ampm: true,
            hourMin: 7,
            hourMax: 23,
            minuteMin: 0,
            minuteMax: 45,
            minuteGrid: 15,
            hourGrid: 4
        });
        //
        //
        $('#workerTable-@(Model.ID)').dataTable({
            "bPaginate": true,
            "bLengthChange": true,
            "aaSorting": [[9, 'desc']],
            "bFilter": true,
            "bSort": true,
            "bInfo": true,
            "iDeferLoading": true,
            "bAutoWidth": false,
            "bServerSide": true,
            "sAjaxSource": "/Worker/AjaxHandler", 
            "oLanguage": datatable_lang_@(CI.TwoLetterISOLanguageName),
            "bProcessing": true,
            "aoColumns": [
                { "mDataProp": "tabref","bSearchable": false, "bSortable": false, "bVisible": false },
                { "mDataProp": "tablabel","bSearchable": false, "bSortable": false, "bVisible": false },
                { "mDataProp": "WID","bSearchable": false, "bSortable": false, "bVisible": false },
                { "mDataProp": "dwccardnum" },
                { "mDataProp": "active" },
                { "mDataProp": "firstname1" },
                { "mDataProp": "firstname2" },
                { "mDataProp": "lastname1" },
                { "mDataProp": "lastname2" },
                { "mDataProp": "memberexpirationdate" }
            ],
            // callback populates html attr with row data from JSON            
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                $(nRow).attr('recordid', aData['WID']);
                //$(nRow).attr('edittablabel', aData[1]);                
                return nRow;
            }         
        }).fnSetFilteringDelay(250);
        // workRequest Dialog -doubleclick on row to select
        // create event to handle worker selection from dialog
        $('#workerTable-@(Model.ID)').find('tbody').dblclick(function (event) {            
            var myTr = event.target.parentNode;
            var myID = $(myTr).attr('recordid');  
            var myLabel =  $(myTr).find('td:eq(0)').text() + ' '+
                                              $(myTr).find('td:eq(2)').text() + ' '+
                                              $(myTr).find('td:eq(4)').text();
          // handler function created by addRequestionBtn create event
          M_workerRequestHandler_@(Model.ID)(myID, myLabel);
            $('a.ui-dialog-titlebar-close').click();
        });
        //////////////////////////////////////////////////
        //
        //
        $('#workerDialog-@(Model.ID)').hide();
        $('#workerTable-@(Model.ID)').hide();
        //$("#wophone").mask("999-999-9999", { placeholder: " " });

        //////////////////////////////////////////////////
        //
        //
        $('#addRequestBtn-@(Model.ID)').click(function () {
            $('#workerTable-@(Model.ID)').dataTable().fnDraw();
            $('#workerTable-@(Model.ID)').show();
            //
            //Anon function to handle doubleclick of record selector
            M_workerRequestHandler_@(Model.ID) = function (myID, myLabel){
                $('#workerRequests2_WO-@(Model.ID)').append(
                    $('<option></option>').val(myID).html(myLabel)                
                );
            }
            $("#workerDialog-@(Model.ID)").dialog({
                    height: 340,
                    width: 1000,
                    modal: true
            });
            
            $('#workerDialog-@(Model.ID)').show();
        });
        //////////////////////////////////////////////////
        //
        //
        $('#removeRequestBtn-@(Model.ID)').click(function () {
            $('#workerRequests2_WO-@(Model.ID)').find('option:selected').remove();
        });
    });
</script>