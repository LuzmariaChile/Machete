@model Machete.Domain.Worker
@using Machete.Web.Helpers
@using Machete.Web.Resources
@{
    System.Globalization.CultureInfo CI = (System.Globalization.CultureInfo)Session["Culture"];
    string recType = "worker";
    string idPrefix = recType + Model.ID + "-";
}
@Html.HiddenFor(model => model.ID, new { @class = "hiddenRecID" })
<div class="mui-edit-block">
    <div class="tb-table">
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.dwccardnum)
            </div>
            <div class="tb-field">
                @Html.TextBox("dwccardnum", Model.dwccardnum, new { @tabindex = "1", 
                                                                    @class = "workerEditor", 
                                                                    @id = idPrefix + "dwccardnum" })
                @Html.ValidationMessageFor(model => model.dwccardnum)
            </div>
            <!--dwccardnum-->
            <div class="tb-label">
                @Html.LabelFor(model => model.dateOfMembership)
            </div>
            <div class="tb-field">
                @Html.TextBox("dateOfMembership",
                    Html.Encode(Model.dateOfMembership == DateTime.MinValue ? "" : Model.dateOfMembership.ToShortDateString()),
                                        new { @class = "ui-datepicker workerEditor", tabindex = "2", id = idPrefix + "dateOfMembership" })
                @Html.ValidationMessageFor(model => model.dateOfMembership)
            </div>
            <!--dateOfMembership-->
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.memberStatus)
            </div>
            <div class="tb-field">
                @Html.mUIDropDownListFor(model => model.memberStatus, Lookups.memberStatus.get(CI.TwoLetterISOLanguageName),
                                  new { tabindex = "1", @class = "workerEditor", id = idPrefix + "memberStatus" })
                @Html.ValidationMessageFor(model => model.memberStatus)
            </div>
            <!--memberStatus-->
            <div class="tb-label">
                @Html.LabelFor(model => model.memberReactivateDate)
            </div>
            <div class="tb-field">
                @Html.TextBox("memberReactivateDate",
                    Html.Encode(Model.memberReactivateDate == DateTime.MinValue ? "" :
                                Model.memberReactivateDate == null ? "" :
                                ((DateTime)Model.memberReactivateDate).ToShortDateString()),
                                new { @class = "ui-datepicker workerEditor", tabindex = "2", id = idPrefix + "memberReactivateDate" })
                @Html.ValidationMessageFor(model => model.memberReactivateDate)
            </div>
            <!--memberReactivateDate-->
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.englishlevelID)
            </div>
            <div class="tb-field">
                @Html.DropDownListFor(model => model.englishlevelID,
                                  new SelectList(Lookups.skillLevels(),
                                      "Value",
                                      "Text", Model.englishlevelID),
                                  @Machete.Web.Resources.Shared.choose,
                                           new { tabindex = "1", @class = "workerEditor", id = idPrefix + "englishlevelID" })
                @Html.ValidationMessageFor(model => model.englishlevelID)
            </div>
            <!--englishlevelID-->
            <div class="tb-label">
                @Html.LabelFor(model => model.memberexpirationdate)
            </div>
            <div class="tb-field">
                @Html.TextBox("memberexpirationdate",
                              Html.Encode(Model.memberexpirationdate == DateTime.MinValue ? "" : Model.memberexpirationdate.ToShortDateString()),
                                                              new { @class = "ui-datepicker workerEditor", tabindex = "2", id = idPrefix + "memberexpirationdate" })
                @Html.ValidationMessageFor(model => model.memberexpirationdate)
            </div>
            <!--memberexpirationdate-->
        </div>
    </div>
    <div class="tb-table">
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.typeOfWorkID)
            </div>
            <div class="tb-field">
                @Html.DropDownListFor(model => model.typeOfWorkID,
                                  new SelectList(Lookups.typesOfWork.get(CI.TwoLetterISOLanguageName),
                                                 "Value",
                                                 "Text",
                                                 Model.typeOfWorkID),
                                  @Machete.Web.Resources.Shared.choose,
                                                    new { tabindex = "1", @class = "workerEditor", id = idPrefix + "typeOfWorkID" })
                @Html.ValidationMessageFor(model => model.typeOfWorkID)
            </div>
            <!--typeOfWorkID-->
        </div>
    </div>
    <div class="tb-table">
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.RaceID)
            </div>
            <div class="tb-field">
                @Html.DropDownListFor(model => model.RaceID,
                                           new SelectList(Lookups.race.get(CI.TwoLetterISOLanguageName),
                                                 "Value",
                                                 "Text",
                                                 Model.RaceID),
                                  @Machete.Web.Resources.Shared.choose,
                                                    new { tabindex = "1", @class = "workerEditor", id = idPrefix + "RaceID" })
                @Html.ValidationMessageFor(model => model.RaceID)
            </div>
            <!--RaceID-->
            <div class="tb-label">
                @Html.LabelFor(model => model.raceother)
            </div>
            <div class="tb-field">
                @Html.TextBox("raceother", Model.raceother, new { @class = "workerEditor", id = idPrefix + "raceother", tabindex = "2" })
                @Html.ValidationMessageFor(model => model.raceother)
            </div>
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.height)
            </div>
            <div class="tb-field">
                @Html.TextBox("height", Model.height, new { @class = "workerEditor", id = idPrefix + "height", tabindex = "1" })
                @Html.ValidationMessageFor(model => model.height)
            </div>
            <!--height-->
            <div class="tb-label">
                @Html.LabelFor(model => model.dateOfBirth)
            </div>
            <div class="tb-field">
                @Html.TextBox("dateOfBirth",
                            Html.Encode(Model.dateOfBirth == DateTime.MinValue ? "" : Model.dateOfBirth.ToShortDateString()),
                                              new { @class = "ui-datepicker workerEditor", tabindex = "2", id = idPrefix + "dateOfBirth" })
                @Html.ValidationMessageFor(model => model.dateOfBirth)
            </div>
            <!--dateOfBirth-->
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.weight)
            </div>
            <div class="tb-field">
                @Html.TextBox("weight", Model.weight, new { @class = "workerEditor", id = idPrefix + "weight", tabindex = "1" })
                @Html.ValidationMessageFor(model => model.weight)
            </div>
            <!--weight-->
            <div class="tb-label">
                @Html.LabelFor(model => model.neighborhoodID)
            </div>
            <div class="tb-field">
                @Html.DropDownListFor(model => model.neighborhoodID,
                                             new SelectList(Lookups.neighborhood.get(CI.TwoLetterISOLanguageName),
                                        "Value",
                                        "Text",
                                        Model.neighborhoodID),
                                    @Machete.Web.Resources.Shared.choose,
                                             new { tabindex = "2", @class = "workerEditor", id = idPrefix + "neighborhoodID" })
                @Html.ValidationMessageFor(model => model.neighborhoodID)
            </div>
            <!--neighborhoodID-->
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.recentarrival)
            </div>
            <div class="tb-field">
                @Html.mUIDropDownYesNoFor(model => model.recentarrival, new { tabindex = "1", @class = "workerEditor", id = idPrefix + "recentarrival" })
                @Html.ValidationMessageFor(model => model.recentarrival)
            </div>
            <!--recentarrival-->
            <div class="tb-label">
                @Html.LabelFor(model => model.dateinUSA)
            </div>
            <div class="tb-field">
                @Html.TextBox("dateinUSA",
                            Html.Encode(System.String.Format("{0:d}", Model.dateinUSA)),
                                              new { @class = "ui-datepicker workerEditor", tabindex = "2", id = idPrefix + "dateinUSA" })
                @Html.ValidationMessageFor(model => model.dateinUSA)
            </div>
            <!--dateinUSA-->
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.countryoforiginID)
            </div>
            <div class="tb-field">
                @Html.DropDownListFor(model => model.countryoforiginID,
                     new SelectList(Lookups.countryoforigin.get(CI.TwoLetterISOLanguageName),
                "Value",
                "Text",
                Model.countryoforiginID),
                @Machete.Web.Resources.Shared.choose,
                         new { tabindex = "1", @class = "workerEditor", id = idPrefix + "countryoforiginID" })
                @Html.ValidationMessageFor(model => model.countryoforiginID)
            </div>
            <!--countryoforiginID-->
            <div class="tb-label">
                @Html.LabelFor(model => model.dateinseattle)
            </div>
            <div class="tb-field">
                @Html.TextBox("dateinseattle",
                            Html.Encode(System.String.Format("{0:d}", Model.dateinseattle)),
                                              new { @class = "ui-datepicker workerEditor", tabindex = "2", id = idPrefix + "dateinseattle" })
                @Html.ValidationMessageFor(model => model.dateinseattle)
            </div>
            <!--dateinseattle-->
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.disabled)
            </div>
            <div class="tb-field">
                @Html.mUIDropDownYesNoFor(model => model.disabled, new { tabindex = "1", @class = "workerEditor", id = idPrefix + "disabled" })
                @Html.ValidationMessageFor(model => model.disabled)
            </div>
            <!--disabled-->
            <div class="tb-label">
                @Html.LabelFor(model => model.disabilitydesc)
            </div>
            <div class="tb-field">
                @Html.TextBox("disabilitydesc", Model.disabilitydesc, new { tabindex = "2", @class = "workerEditor", id = idPrefix + "disabilitydesc" })
                @Html.ValidationMessageFor(model => model.disabilitydesc)
            </div>
            <!--disabilitydesc-->
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.maritalstatus)
            </div>
            <div class="tb-field">
                @Html.DropDownListFor(model => model.maritalstatus,
                                             new SelectList(Lookups.maritalstatus.get(CI.TwoLetterISOLanguageName),
                                        "Value",
                                        "Text",
                                        Model.maritalstatus),
                                             new { tabindex = "1", @class = "workerEditor", id = idPrefix + "maritalstatus" })
                @Html.ValidationMessageFor(model => model.maritalstatus)
            </div>
            <!--maritalstatus-->
            <div class="tb-label">
                @Html.LabelFor(model => model.livewithchildren)
            </div>
            <div class="tb-field">
                @Html.mUIDropDownYesNoFor(model => model.livewithchildren, new { tabindex = "2", @class = "workerEditor", id = idPrefix + "livewithchildren" })
                @Html.ValidationMessageFor(model => model.livewithchildren)
            </div>
            <!--livewithchildren-->
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.numofchildren)
            </div>
            <div class="tb-field">
                @Html.TextBox("numofchildren", Model.numofchildren, new { tabindex = "1", @class = "workerEditor", id = idPrefix + "numofchildren" })
                @Html.ValidationMessageFor(model => model.numofchildren)
            </div>
            <!--numofchildren-->
            <div class="tb-label">
                @Html.LabelFor(model => model.incomeID)
            </div>
            <div class="tb-field">
                @Html.DropDownListFor(model => model.incomeID,
                                             new SelectList(Lookups.income.get(CI.TwoLetterISOLanguageName),
                                        "Value",
                                        "Text",
                                        Model.incomeID),
                                    @Machete.Web.Resources.Shared.choose,
                                             new { tabindex = "2", @class = "workerEditor", id = idPrefix + "incomeID" })
                @Html.ValidationMessageFor(model => model.incomeID)
            </div>
            <!--incomeID-->
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.livealone)
            </div>
            <div class="tb-field">
                @Html.mUIDropDownYesNoFor(model => model.livealone, new { @tabindex = "1", @class = "workerEditor",  @id = idPrefix + "livealone" })
                @Html.ValidationMessageFor(model => model.livealone)
            </div>
            <!--livealone-->
            <div class="tb-label">
                @Html.LabelFor(model => model.immigrantrefugee)
            </div>
            <div class="tb-field">
                @Html.mUIDropDownYesNoFor(model => model.immigrantrefugee, new { tabindex = "2", @class = "workerEditor", id = idPrefix + "immigrantrefugee" })
                @Html.ValidationMessageFor(model => model.immigrantrefugee)
            </div>
            <!--immigrantrefugee-->
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.homeless)
            </div>
            <div class="tb-field">
                @Html.mUIDropDownYesNoFor(model => model.homeless, new { @tabindex = "1", @class = "workerEditor",@id = idPrefix + "homeless"})
                @Html.ValidationMessageFor(model => model.homeless)
            </div>
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.driverslicense)
            </div>
            <div class="tb-field">
                @Html.mUIDropDownYesNoFor(model => model.driverslicense, new { tabindex = "1", @class = "workerEditor", id = idPrefix + "driverslicense" })
                @Html.ValidationMessageFor(model => model.driverslicense)
            </div>
            <!--driverslicense-->
            <div class="tb-label">
                @Html.LabelFor(model => model.licenseexpirationdate)
            </div>
            <div class="tb-field">
                @Html.TextBox("licenseexpirationdate",
            Html.Encode(System.String.Format("{0:d}", Model.licenseexpirationdate)),
                     new { @class = "ui-datepicker workerEditor", tabindex = "2", id = idPrefix + "licenseexpirationdate" })
                @Html.ValidationMessageFor(model => model.licenseexpirationdate)
            </div>
            <!--licenseexpirationdate-->
        </div>
        <div class="tb-row">
            <div class="tb-label">
                @Html.LabelFor(model => model.carinsurance)
            </div>
            <div class="tb-field">
                @Html.mUIDropDownYesNoFor(model => model.carinsurance, new { tabindex = "1", @class = "workerEditor", id = idPrefix + "carinsurance" })
                @Html.ValidationMessageFor(model => model.carinsurance)
            </div>
            <!--carinsurance-->
            <div class="tb-label">
                @Html.LabelFor(model => model.insuranceexpiration)
            </div>
            <div class="tb-field">
                @Html.TextBox("insuranceexpiration", Html.Encode(System.String.Format("{0:d}", Model.insuranceexpiration)), new { @class = "ui-datepicker workerEditor", tabindex = "2", id = idPrefix + "insuranceexpiration" })
                @Html.ValidationMessageFor(model => model.insuranceexpiration)
            </div>
            <!--insuranceexpiration-->
        </div>
    </div>
</div>
<div class="tb-table mui-edit-worker-picture">
    <div class="tb-row">
        @if (Model.ImageID == null || Model.ImageID == 0)
        {
            <img id="ImageID" src="/Content/images/NO-IMAGE-AVAILABLE.jpg" alt="no image" style="width: 200px"/>
        }
        else
        {
            <img src="@Url.Action("GetImage", "Image", new { ID = Model.ImageID })" alt="no image" style="width: 200px"/>            
        }
        <div class="view_off print_off">
            <div>
            @Workers.uploadnewimage
            </div>
            <input id="@(idPrefix)imagefile" type="file" name="imagefile" />
        </div>
    </div>
</div>
<!--Image-->
<div class="tb-table mui-edit-worker-footer">
    <div class="tb-row">
        <div class="tb-label tri-col" style="text-align: left">
            @Html.LabelFor(model => model.skill1)
        </div>
        <div class="tb-label tri-col" style="text-align: left">
            @Html.LabelFor(model => model.skill2)
        </div>
        <div class="tb-label tri-col" style="text-align: left">
            @Html.LabelFor(model => model.skill3)
        </div>
    </div>
    <div class="tb-row">
        <div class="tb-field tri-col">
            @Html.DropDownListFor(model => model.skill1,
            new SelectList(Lookups.skill.get(CI.TwoLetterISOLanguageName, true),
                "Value",
                "Text",
                Model.skill1),
                         @Machete.Web.Resources.Shared.choose, new { tabindex = "4" })
            @Html.ValidationMessageFor(model => model.skill1)
        </div>
        <div class="tb-field tri-col">
            @Html.DropDownListFor(model => model.skill2,
            new SelectList(Lookups.skill.get(CI.TwoLetterISOLanguageName, true),
                "Value",
                "Text", Model.skill2),
                         @Machete.Web.Resources.Shared.choose, new { tabindex = "4" })
            @Html.ValidationMessageFor(model => model.skill2)
        </div>
        <div class="tb-field tri-col">
            @Html.DropDownListFor(model => model.skill3,
            new SelectList(Lookups.skill.get(CI.TwoLetterISOLanguageName, true),
                "Value",
                "Text", Model.skill3),
                         @Machete.Web.Resources.Shared.choose, new { tabindex = "4" })
            @Html.ValidationMessageFor(model => model.skill3)
        </div>
    </div>
    <div class="tb-row">
        <div class="tb-label tri-col" style="text-align: left">
            @Html.LabelFor(model => model.emcontUSAname)
        </div>
        <div class="tb-label tri-col" style="text-align: left">
            @Html.LabelFor(model => model.emcontUSArelation)
        </div>
        <div class="tb-label tri-col" style="text-align: left">
            @Html.LabelFor(model => model.emcontUSAphone)
        </div>
    </div>
    <div class="tb-row">
        <div class="tb-field tri-col">
            @Html.TextBox("emcontUSAname", Model.emcontUSAname, new { tabindex = "4" })
            @Html.ValidationMessageFor(model => model.emcontUSAname)
        </div>
        <div class="tb-field tri-col">
            @Html.TextBox("emcontUSArelation", Model.emcontUSArelation, new { tabindex = "4" })
            @Html.ValidationMessageFor(model => model.emcontUSArelation)
        </div>
        <div class="tb-field tri-col">
            @Html.TextBox("emcontUSAphone", Model.emcontUSAphone, new { tabindex = "4" })
            @Html.ValidationMessageFor(model => model.emcontUSAphone)
        </div>
    </div>
    <div class="tb-row">
        <div class="tb-label tri-col" style="text-align: left">
            @Html.LabelFor(model => model.emcontoriginname)
        </div>
        <div class="tb-label tri-col" style="text-align: left">
            @Html.LabelFor(model => model.emcontoriginrelation)
        </div>
        <div class="tb-label tri-col" style="text-align: left">
            @Html.LabelFor(model => model.emcontoriginphone)
        </div>
    </div>
    <div class="tb-row">
        <div class="tb-field tri-col">
            @Html.TextBox("emcontUSAname", Model.emcontoriginname, new { tabindex = "4" })
            @Html.ValidationMessageFor(model => model.emcontoriginname)
        </div>
        <div class="tb-field tri-col">
            @Html.TextBox("emcontoriginrelation", Model.emcontoriginrelation, new { tabindex = "4" })
            @Html.ValidationMessageFor(model => model.emcontoriginrelation)
        </div>
        <div class="tb-field tri-col">
            @Html.TextBox("emcontoriginphone", Model.emcontoriginphone, new { tabindex = "4" })
            @Html.ValidationMessageFor(model => model.emcontoriginphone)
        </div>
    </div>
</div>
<!--contacts-->
@Html.Partial("ManagerInfo")
@Html.Partial("AdministratorInfo")
<script type="text/javascript">
    $(document).ready(function () {
        //
        $("#@(idPrefix)RaceID").mUI('selectEnableOnValue', {
            target: $("#@(idPrefix)raceother"),
            enableVal: "7" //Race other from lookups table
        });
        //
        $("#@(idPrefix)disabled").mUI('selectEnableOnValue', {
            target: $("#@(idPrefix)disabilitydesc"),
            enableVal: "true"
        });
        //
        $("#@(idPrefix)driverslicense").mUI('selectEnableOnValue', {
            target: $("#@(idPrefix)licenseexpirationdate"),
            enableVal: "true"
        });
        //
        $("#@(idPrefix)carinsurance").mUI('selectEnableOnValue', {
            target: $("#@(idPrefix)insuranceexpiration"),
            enableVal: "true"
        });
        //
        $('.ui-datepicker').datepicker({
            dateFormat: 'mm/dd/yy',
            buttonImage: '@Url.Content("~/Content/calendar.gif")',
            buttonImageOnly: true,
            showOn: "button"
        });
        $('.ui-datepicker-trigger').addClass('print_off');
    });
</script>
