@model Machete.Domain.WorkAssignment
@using Machete.Web.Helpers
@using Machete.Web.Resources
@Html.HiddenFor(model => model.ID, new { @class = "hiddenRecID" })
@Html.HiddenFor(model => model.workOrderID)

<div class="tb-table">

    <div class="tb-row">
        <div class="tb-label tb-cell">
            @Html.LabelFor(model => model.englishLevelID)
        </div>
        <div class="tb-field tb-cell">
            @Html.DropDownListFor(model => model.englishLevelID, new SelectList(ViewBag.skillLevelList, "Value", "Text", Model.englishLevelID), @Machete.Web.Resources.Shared.choose)
            @Html.ValidationMessageFor(model => model.englishLevelID)
        </div>
        <div class="tb-label tb-cell">
            @Html.LabelFor(model => model.skillID)
        </div>
        <div class="tb-field tb-cell">
            <select name="skillID" id="skillID" data-val-required="A skill is required (use general labor if none was specificed)" data-val-number="The field Skill must be a number." data-val="true" class="valid"><option value="">@Shared.choose</option>
                @foreach (var item in ViewBag.skillList)
                {
                    if (Model.skillID == Convert.ToInt16(item.Value))
                    {
                        <option value="@(item.Value)" wage="@(item.wage)" minHour="@(item.minHour)" fixedJob="@(item.fixedJob)" selected="selected">@item.Text</option>
                    }
                    else
                    {                                                
                        <option value="@(item.Value)" wage="@(item.wage)" minHour="@(item.minHour)" fixedJob="@(item.fixedJob)">@item.Text</option>
                    }
                } 
            </select>
            @*@Html.DropDownListFor(model => model.skillID, new SelectList(ViewBag.skillList, "Value", "Text", Model.skillID), @Machete.Web.Resources.Shared.choose)*@
            @Html.ValidationMessageFor(model => model.skillID)
        </div>
    </div>
</div>
<div class="tb-table">
    <div class="tb-row">
        <div class="tb-label tb-cell">
            @Html.LabelFor(model => model.hourlyWage)
        </div>
        <div class="tb-field tb-cell">
            @Html.TextBox("hourlyWage", Html.Encode(System.String.Format("{0:f2}", Model.hourlyWage)), new { @class = "money-field" })
            @Html.ValidationMessageFor(model => model.hourlyWage)
        </div>
        <div class="tb-label tb-cell">
            @Html.LabelFor(model => model.hours)
        </div>
        <div class="tb-field tb-cell">
            @Html.DropDownListFor(model => model.hours, new SelectList(ViewBag.hoursList, "Value", "Text", Model.hours), Shared.choose)
            @Html.ValidationMessageFor(model => model.hours)
        </div>
        <div class="tb-label tb-cell">
            @Html.LabelFor(model => model.days)
        </div>
        <div class="tb-field tb-cell">
            @Html.DropDownListFor(model => model.days, new SelectList(ViewBag.daysList, "Value", "Text", Model.days), Shared.choose)
            @Html.ValidationMessageFor(model => model.days)
        </div>
    </div>
</div>
<div class="tb-table">
    <div class="tb-row">
        <div class="tb-label tb-cell desc-label">
            @Html.LabelFor(model => model.description)
        </div>
        <div class="tb-field tb-cell desc-field">
            @*@Html.TextAreaFor("description", Model.description, new { style = "width: 40em; height: 4em;" })*@
            @Html.TextAreaFor(model => model.description, new { @class = "desc-field" })
            @Html.ValidationMessageFor(model => model.description)
        </div>
    </div>
</div>
