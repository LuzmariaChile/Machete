@model Machete.Domain.WorkAssignment
@using Machete.Web.Helpers
@using Machete.Web.Resources
@Html.HiddenFor(model => model.ID, new { @class = "hiddenRecID" })
@Html.HiddenFor(model => model.workOrderID)
@{
    string myStr = "";
        }

<div class="tb-table">

    <div class="tb-row">
        <div class="tb-label tb-cell">
            @Html.LabelFor(model => model.englishLevelID)
        </div>
        <div class="tb-field tb-cell">
            @Html.DropDownListFor(model => model.englishLevelID, new SelectList(ViewBag.skillLevelList, "Value", "Text", Model.englishLevelID), @Machete.Web.Resources.Shared.choose)
            @Html.ValidationMessageFor(model => model.englishLevelID)
        </div>
        <div class="tb-label tb-cell">
            @Html.LabelFor(model => model.skillID)
        </div>
        <div class="tb-field tb-cell">
            <select name="skillID" id="skillID" data-val-required="A skill is required (use general labor if none was specificed)" data-val-number="The field Skill must be a number." data-val="true" class="valid"><option value="">@Shared.choose</option>
                @foreach (var item in ViewBag.skillList)
                {
                    if (Model.skillID == Convert.ToInt16(item.Value))
                    {
                        <option value="@(item.Value)" wage="@(item.wage)" minHour="@(item.minHour)" fixedJob="@(item.fixedJob)" selected="selected">@item.Text</option>
                    }
                    else
                    {                                                
                        <option value="@(item.Value)" wage="@(item.wage)" minHour="@(item.minHour)" fixedJob="@(item.fixedJob)">@item.Text</option>
                    }
                } 
            </select>
            @*@Html.DropDownListFor(model => model.skillID, new SelectList(ViewBag.skillList, "Value", "Text", Model.skillID), @Machete.Web.Resources.Shared.choose)*@
            @Html.ValidationMessageFor(model => model.skillID)
        </div>
        <div class="tb-label tb-cell">
            @Html.LabelFor(model => model.pseudoID)
        </div>
        <div class="tb-field tb-cell">
            @Html.TextBox("pseudoID",Model.pseudoID, new { style = "width: 2em", @readonly="readonly"})
            @Html.ValidationMessageFor(model => model.pseudoID)
        </div>
    </div>
</div>
<div class="tb-table">
    <div class="tb-row">
        <div class="tb-label tb-cell">
            @Html.LabelFor(model => model.hourlyWage)
        </div>
        <div class="tb-field tb-cell">
            @Html.TextBox("hourlyWage", Html.Encode(System.String.Format("{0:f2}", Model.hourlyWage)), new { @class = "money-field earnings-part" })
            @Html.ValidationMessageFor(model => model.hourlyWage)
        </div>
        <div class="tb-label tb-cell">
            @Html.LabelFor(model => model.hours)
        </div>
        <div class="tb-field tb-cell">
            @Html.DropDownListFor(model => model.hours, new SelectList(ViewBag.hoursList, "Value", "Text", Model.hours), Shared.choose, new { @id="hours", @class = "earnings-part" })
            @Html.ValidationMessageFor(model => model.hours)
        </div>
        <div class="tb-label tb-cell">
            @Html.LabelFor(model => model.days)
        </div>
        <div class="tb-field tb-cell">
            @Html.DropDownListFor(model => model.days, new SelectList(ViewBag.daysList, "Value", "Text", Model.days), Shared.choose, new { @id="days", @class = "earnings-part" })
            @Html.ValidationMessageFor(model => model.days)
        </div>
        <div class="tb-label tb-cell">
            @Html.Label("total")
        </div>
        <div class="tb-field tb-cell">
            @Html.TextBox("total",null,new { style = "width: 6em;" })
        </div>
    </div>
</div>
<div class="tb-table">
    <div class="tb-row">
        <div class="tb-label tb-cell desc-label">
            @Html.LabelFor(model => model.description)
        </div>
        <div class="tb-field tb-cell desc-field">
            @*@Html.TextAreaFor("description", Model.description, new { style = "width: 40em; height: 4em;" })*@
            @Html.TextAreaFor(model => model.description, new { @class = "desc-field" })
            @Html.ValidationMessageFor(model => model.description)
        </div>
    </div>
</div>
@if (Html.IsInRole(Html.Role_AM()))
{
<div class="Accordion" id="dispatchAccordion">
    <h3><a href="#">Dispatch information?!</a></h3>
    <div class="tb-table">
        <div class="tb-row">
            <div class="tb-label tb-cell">
                @Html.LabelFor(model => model.workerAssignedID)
            </div>
            <div class="tb-display tb-cell">
                @Html.HiddenFor(model => model.workerAssignedID,
                    new { 
                       @id="workerAssigned-" + Model.ID
                    })           
                    @{                    
                        if (Model.workerAssigned != null)
                        {
                            myStr = Model.workerAssigned.dwccardnum + " " +
                                           Model.workerAssigned.Person.fullName();
                        }
                    }
                @Html.TextBox("workerAssignedDisplay", 
                    myStr, 
                    new { 
                        style = "width: 20em",
                        @disabled = "disabled",
                        @id = "workerAssignedDisplay-" + Model.ID
                    })
             </div>
             <div class="tb-label tb-cell">
                    <input type="button" value="Change?!" class="formButton" id="changeAssigned-@(Model.ID)"/>
                    <input type="button" value="delete?!" class="formButton" id="deleteAssigned-@(Model.ID)"/>
             </div>
        </div>
    </div>
</div>
}
@Html.Partial("ManagerInfo")
@Html.Partial("AdministratorInfo")
<script language="javascript" type="text/javascript">
    $(document).ready(function () {
            $('#changeAssigned-@(Model.ID)').click(function () {

                M_workerRequestTable_@(Model.workOrderID).fnDraw();
                $('#workerTable-@(Model.workOrderID)').show();
                M_workerRequestHandler_@(Model.workOrderID) = function (myID, myLabel) {
                    //
                    //Anon function to handle doubleclick of record selector
                    $('#workerAssigned-@(Model.ID)').val(myID);
                    $('#workerAssignedDisplay-@(Model.ID)').val(myLabel);
                    $('#WorkAssignmentTab-@(Model.ID)').submit();
                    //$('#DeleteWorkOrder-@(Model.ID)').submit();

                }
                $("#workerDialog-@(Model.workOrderID)").dialog({
                        height: 340,
                        width: 1000,
                        modal: true
                });            
                $('#workerDialog-@(Model.workOrderID)').show();
            });

        ////////////////////////////////////////////////////////////////
        //
        // Delete confirmation 
        //
        $('#deleteAssigned-@(Model.ID)').click(function () {
            jConfirm('Do you want to delete this dispatch assignment?!',
                     'Dispatch delete title',
                     function (r) {
                         if (r == true) {
                            $('#workerAssigned-@(Model.ID)').val(null);
                            $('#workerAssignedDisplay-@(Model.ID)').val(null);
                         }
                     }
            );
        });
    });
</script>