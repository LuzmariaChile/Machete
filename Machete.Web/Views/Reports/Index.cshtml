@using Machete.Web.Helpers
@using Machete.Domain.Resources
@using Machete.Web.Resources
@using Machete.Service
@Scripts.Render("~/bundles/reports")

@{
    System.Globalization.CultureInfo CI = (System.Globalization.CultureInfo)Session["Culture"];
}
<div id="reportTabs">
    <ul>
        <li><a href="#summaryWrapper" id="summaryTab" >@Machete.Web.Resources.Reports.summaryTab</a> </li>
        <li><a href="#ssrsWrapper" id="ssrsTab">@Machete.Web.Resources.Reports.ssrsTab</a> </li>
    </ul>
        @Html.Partial("Summary")
        @Html.Partial("SSRS")
</div>
<script type="text/javascript">
    $(document).ready(function () {
        //VARS
        var dcl = $('#dclDataTable');
        var wec = $('#wecDataTable');
        var mwd = $('#mwdDataTable');
        var lang = datatable_lang_@(CI.TwoLetterISOLanguageName);

        // hide stuff 
        //  
        $('#summaryHide').click(
            function () {
                $('#summaryPopup').hide();
            });

        $('#dclTable').hide();
        $('#wecTable').hide();
        $('#mwdTable').hide();
        //$('.report-progress').hide();

        // make stuff pretty
        //
        $('#reportTabs').tabs();
        $('.formButton').button();
        $('#summaryReports').accordion({
            collapsible: true,
            active: false,
            autoHeight: false
        });
        
        ////////////////////// | the date-pickerers |

        // Daily datepickerer
        //

        $('#dclDate').hover(
            function () {
                $('#dclHelp').hide("fade", 4000);
            });

        $('#dclDate').datepicker({
            autoSize: true,
            changeMonth: true,
            changeYear: true,
            constrainInput: true,
            dateFormat: 'mm/dd/yy',
            duration: "slow",
            showButtonPanel: false,
            showOn: "focus"
        });

        $('#dclDate').change(
            function (event) {
                dclNewTable();
            });

        // Weekly datepickerer
        //

        $('#wecDate').hover(
            function () {
                $('#wecHelp').hide("fade", 4000);
            });

        $('#wecDate').datepicker({
            autoSize: true,
            changeMonth: true,
            changeYear: true,
            constrainInput: true,
            dateFormat: 'mm/dd/yy',
            duration: "slow",
            showButtonPanel: false,
            showOn: "focus",
            beforeShowDay: function (date) {
                var day = date.getDay();
                return [(day > 5), ''];
            }
        });

        $('#wecDate').change(
            function (event) {
                wecNewTable();
            });

        // Monthly datepickerer
        //

        $('#mwdDate').hover(
            function () {
                $('#mwdHelp').hide("fade", 4000);
            });

        $('#mwdDate').datepicker({
            autoSize: true,
            changeMonth: true,
            changeYear: true,
            constrainInput: true,
            dateFormat: 'mm/dd/yy',
            duration: "slow",
            showButtonPanel: false,
            showOn: "focus"
        });

        $('#mwdDate').change(
            function (event) {
                mwdNewTable();
            });

        //////////////////////////////////////////////////////////////////////// | DATATABLES |
        //
        // Looking for the table properties? Try reports.js in ~/Web/Scripts
        //

        function dclNewTable() {
            oDclTable = $.extend(true, {}, reportTableDefaults("/Reports/AjaxDcl", lang, $('#dclDate').val()));
            oDclTable.aoColumns = [
                { mDataProp: "date" },
                { mDataProp: "dwcList" },
                { mDataProp: "dwcPropio" },
                { mDataProp: "hhhList" },
                { mDataProp: "hhhPropio" },
                { mDataProp: "uniqueSignins" },
                { mDataProp: "totalSignins" },
                { mDataProp: "totalAssignments" },
                { mDataProp: "cancelledJobs" },
            ];
            oDclTable.bDestroy = "true,";
            dcl = $('#dclDataTable').dataTable(oDclTable);
        }

        function wecNewTable() {
            oWecTable = $.extend(true, {}, reportTableDefaults("/Reports/AjaxWec", lang, $('#wecDate').val()));
            oWecTable.aoColumns = [
                { mDataProp: "weekday" },
                { mDataProp: "date" },
                { mDataProp: "totalSignins" },
                { mDataProp: "totalAssignments" },
                { mDataProp: "weekEstDailyHours" },
                { mDataProp: "weekEstPayment" },
                { mDataProp: "weekHourlyWage" },
                {
                    mDataProp: null,
                    sDefaultContent: '<img src="/Content/dataTables/details_open.png" class="nestedDetailsButton">'
                },
            ];
            wec = $('#wecDataTable').dataTable(oWecTable);
        }

        function mwdNewTable() {
            oMwdTable = $.extend(true, {}, reportTableDefaults("/Reports/AjaxMwd", lang, $('#mwdDate').val()));
            oMwdTable.aoColumns = [
                { mDataProp: "date" },
                { mDataProp: "stillHere"},
                { mDataProp: "totalSignins" },
                { mDataProp: "wentToClass"},
                { mDataProp: "dispatched"},
                { mDataProp: "totalHours" },
                { mDataProp: "totalIncome" },
                { mDataProp: "avgIncomePerHour" },
                { 
                    mDataProp: null,
                    sDefaultContent: '<img src="/Content/dataTables/details_open.png" class="nestedDetailsButton">'
                },
            ];
            oMwdTable.fnFooterCallback = function (nRow, aaData, iStart, iEnd, aiDisplay) {
                /*
                 * Calculate the total for all numbers this table 
                 */
                var nCells = nRow.getElementsByTagName('th');
                var nTr = nRow.parentElement.getElementsByTagName('tr')[1];
                var tCells = nTr.getElementsByTagName('td');

                var iTotal = 0;
                var iWent = 0;
                var iDispatch = 0;
                var iHours = 0;
                var iIncome = 0;
                var iAverage = 0.0;
                var iDontCount = 0.0;

                var iEnrolled = 0;
                var iQuit = 0;
                var myFirstSignin = 0;
                var jornalero = 0;
                var conseguiChamba = 0;
                var myFirstJob = 0;

                //console.log(aaData); aaData is an array of objects, each containing properties and values for each column

                for (var i = 0; i < aaData.length ; i++) {
                    //console.log(aaData[i]);
                    iTotal += parseInt(aaData[i].totalSignins);
                    iWent += parseInt(aaData[i].wentToClass);
                    iDispatch += parseInt(aaData[i].dispatched);
                    iHours += parseInt(aaData[i].totalHours);
                    iIncome += parseFloat(aaData[i].totalIncome.replace('$','').replace(',',''));
                    iAverage += parseFloat(aaData[i].avgIncomePerHour.replace('$', ''));
                    iDontCount += parseFloat(aaData[i].avgIncomePerHour.replace('$', '')) > 0 ? 0 : 1;
                    iEnrolled += parseInt(aaData[i].drilldown.newlyEnrolled);
                    iQuit += parseInt(aaData[i].drilldown.peopleWhoLeft);
                    myFirstSignin += parseInt(aaData[i].drilldown.uniqueSignins);
                    jornalero += parseInt(aaData[i].drilldown.tempDispatched);
                    conseguiChamba += parseInt(aaData[i].drilldown.permanentPlacements);
                    myFirstJob += parseInt(aaData[i].drilldown.undupDispatched);
                }

                nCells[2].innerHTML = iTotal + ' signins';
                nCells[3].innerHTML = iWent + ' students';
                nCells[4].innerHTML = iDispatch + ' dispatched';
                nCells[5].innerHTML = iHours + ' hours';
                nCells[6].innerHTML = '$' + iIncome.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",") + ' earned';
                nCells[7].innerHTML = '$' + (iAverage / (aaData.length - iDontCount)).toFixed(2) + '/hr. avg.';

                tCells[0].innerHTML = iEnrolled + ' signed up, ' + iQuit + ' left';

                tCells[2].innerHTML = '(' + myFirstSignin + ' unique)';

                tCells[4].innerHTML = '(' + myFirstJob + ' unique, ' + jornalero + ' temporary, and ' + conseguiChamba + ' permanent jobs)';
            }

            oMwdTable.bDestroy = true;
            return $('#mwdDataTable').dataTable(oMwdTable);
            @*monthlyPie();*@
        }

        ////////////////////////////////////////////////////////////// | DRILLDOWNS |
        ////////////////////////////////////////////////////////////// | [+] [-]... |

        //
        // WEEKLY
        //

        function fnFormatWeekDetails(oTable, nTr) {
            var aData = oTable.fnGetData(nTr);
            var jobList = aData.topJobs;
            var sOut = '<table cellpadding="5" cellspacing="0" border="0" class="report-drill">';
            sOut += '<thead><tr><th>Date</th>';
            sOut += '<th>Skill</th>';
            sOut += '<th>Count</th>';
            sOut += '</tr></thead><tbody>';
            for (var i in jobList) {
                var job = jobList[i];
                sOut += '<tr><td>' + job.date + '</td><td>' + job.skill + '</td><td>' + job.count + '</td></tr>';
            }
            sOut += '</tbody></table>';
            return sOut;
        }

        $('#wecDataTable tbody td img').live('click', function () {
            var nTr = $(this).parents('tr')[0];

            if (wec.fnIsOpen(nTr)) {
                /* This row is already open - close it */
                this.src = "/Content/dataTables/details_open.png";
                wec.fnClose(nTr);
            } else {
                /* Open this row */
                this.src = "/Content/dataTables/details_close.png";
                wec.fnOpen(nTr, fnFormatWeekDetails(wec, nTr), 'nestedDetails');
            }
        });

        //
        // MONTHLY
        //

        function fnFormatMonthDetails(oTable, nTr) {
            var aData = oTable.fnGetData(nTr);
            var drillList = aData.drilldown;
            var sOut = '<table cellpadding="5" cellspacing="0" border="0" style="margin-left: 13.5%;background: #90A2B6;border: solid 2px gray;border-collapse: separate;">';
            sOut += '<thead><tr><th>Enrolled</th>';
            sOut += '<th>Exited</th>';
            sOut += '<th>Unique Signin</th>';
            sOut += '<th>Temporary</th>';
            sOut += '<th>Permanent</th>';
            sOut += '<th>Unique Dispatch</th>';
            sOut += '</tr></thead><tbody>';
            sOut += '<tr><td>' + drillList.newlyEnrolled + '</td><td>' + drillList.peopleWhoLeft + '</td><td>' + drillList.uniqueSignins + '</td><td>' + drillList.tempDispatched + '</td><td>' + drillList.permanentPlacements + '</td><td>' + drillList.undupDispatched + '</td></tr>';
            sOut += '</tbody></table>';
            return sOut;
        }

        $('#mwdDataTable tbody td img').live('click', function () {
            var nTr = $(this).parents('tr')[0];

            if (mwd.fnIsOpen(nTr)) {
                /* This row is already open - close it */
                this.src = "/Content/dataTables/details_open.png";
                mwd.fnClose(nTr);
            } else {
                /* Open this row */
                this.src = "/Content/dataTables/details_close.png";
                mwd.fnOpen(nTr, fnFormatMonthDetails(mwd, nTr), 'nestedDetails');
            }
        });

        ///////////////////////////////////////////////////////////////////////////////// | BUTTONS |
        //
        //

        // | REFRESH |

        $('#dclDataOnlyBtn').click(
            function () {
                dclNewTable();
            });

        $('#wecDataOnlyBtn').click(
            function () {
                wecNewTable();
            });

        $('#mwdDataOnlyBtn').click(
            function () {
                mwdNewTable();
            });

        // | PRINT VIEWS |



        // | SPREADSHEETS |

        //
        // ||| PIE CHARTS |||
        //

    });
</script>